{"version":3,"file":"/js/dark-mode.js","mappings":";CAQA,WAEI,aAEA,IAW2BA,EAXrBC,EAAcC,aAAaC,QAAQ,SAEnCC,EAAoB,WAExB,OAAIH,IAIGI,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,QAC9E,EAcIC,EAAa,SAAUR,GAEzB,IAAIS,EACU,SAAVT,GAAoBK,OAAOC,WAAW,gCAAgCC,SAExEG,SAASC,gBAAgBC,aAAa,gBAAiB,QACvDH,EAAIC,SAASG,eAAe,YAAYC,IAAK,gFAG7CJ,SAASC,gBAAgBC,aAAa,gBAAiBZ,GACvDS,EAAKC,SAASG,eAAe,YAAYC,IAAK,oFAC9CC,QAAQC,IAAIP,IAEdM,QAAQC,IAAIP,EACd,EAvBgB,UAHWT,EA4BlBI,MAzBiBC,OAAOC,WAAW,gCAAgCC,QAExEG,SAASC,gBAAgBC,aAAa,gBAAiB,QAGvDF,SAASC,gBAAgBC,aAAa,gBAAiBZ,GAsB3D,IAAMiB,EAAkB,SAAAjB,GAEtB,IAAMkB,EAAkBR,SAASS,cAAc,sBACzCC,EAAcV,SAASS,cAAc,yBAAD,OAA0BnB,EAAK,OACnEqB,EAAiBD,EAAYD,cAAc,KAAKG,aAAa,sBAEnEZ,SAASa,iBAAiB,yBAAyBC,SAAQ,SAAAC,GAEzDA,EAAQC,UAAUC,OAAO,SAC3B,IAEAP,EAAYM,UAAUE,IAAI,UAC1BV,EAAgBN,aAAa,qBAAsBS,GACnDH,EAAgBQ,UAAUC,OAAO,SAAU,UAAW,yBACtDT,EAAgBQ,UAAUE,IAAIP,EAChC,EAEAhB,OAAOC,WAAW,gCAAgCuB,iBAAiB,UAAU,WAEvD,UAAhB5B,GAA2C,SAAhBA,GAC7BO,EAAWJ,IAEf,IAEAC,OAAOwB,iBAAiB,oBAAoB,WAE1CZ,EAAgBb,KAEhBM,SAASa,iBAAiB,yBACvBC,SAAQ,SAAAM,GACPA,EAAOD,iBAAiB,SAAS,WAE/B,IAAM7B,EAAQ8B,EAAOR,aAAa,uBAClCpB,aAAa6B,QAAQ,QAAS/B,GAC9BQ,EAAWR,GACXiB,EAAgBjB,EAClB,GACF,GACJ,GACD,CApFH","sources":["webpack:///./resources/js/dark-mode.js"],"sourcesContent":["/*!\r\n * Color mode toggler for Bootstrap's docs (https://getbootstrap.com/)\r\n * Copyright 2011-2022 The Bootstrap Authors\r\n * Licensed under the Creative Commons Attribution 3.0 Unported License.\r\n * \r\n * Modified.\r\n */\r\n\r\n(() =>\r\n{\r\n    'use strict'\r\n  \r\n    const storedTheme = localStorage.getItem('theme')\r\n  \r\n    const getPreferredTheme = () =>\r\n    {\r\n      if (storedTheme) {\r\n        return storedTheme\r\n      }\r\n  \r\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\r\n    }\r\n  \r\n    const setTheme = function (theme)\r\n    {\r\n      \r\n      if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n        // Dark Mode\r\n        document.documentElement.setAttribute('data-bs-theme', 'dark')\r\n      } else {\r\n        // Light Mode\r\n        document.documentElement.setAttribute('data-bs-theme', theme)\r\n      }\r\n    }\r\n\r\n    var setTheme00 = function (theme)\r\n    {\r\n      var a\r\n      if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n        // Dark Mode\r\n        document.documentElement.setAttribute('data-bs-theme', 'dark')\r\n        a = document.getElementById('navBrand').src ='https://media.maximilian-mewes.de/project/bl/blubber_lounge_rebrand_try.svg'\r\n      } else {\r\n        // Light Mode\r\n        document.documentElement.setAttribute('data-bs-theme', theme)        \r\n        a  = document.getElementById('navBrand').src ='https://media.maximilian-mewes.de/project/bl/blubber_lounge_rebrand_try_white.svg'\r\n        console.log(a);\r\n      }\r\n      console.log(a);\r\n    }\r\n  \r\n    setTheme(getPreferredTheme())\r\n  \r\n    const showActiveTheme = theme =>\r\n    {\r\n      const activeThemeIcon = document.querySelector('.theme-icon-active')\r\n      const btnToActive = document.querySelector(`[data-bs-theme-value=\"${theme}\"]`)\r\n      const svgOfActiveBtn = btnToActive.querySelector('i').getAttribute('data-bs-theme-icon')\r\n  \r\n      document.querySelectorAll('[data-bs-theme-value]').forEach(element =>\r\n      {\r\n        element.classList.remove('active')\r\n      })\r\n  \r\n      btnToActive.classList.add('active')\r\n      activeThemeIcon.setAttribute('data-bs-theme-icon', svgOfActiveBtn)\r\n      activeThemeIcon.classList.remove('fa-sun', 'fa-moon', 'fa-circle-half-stroke')\r\n      activeThemeIcon.classList.add(svgOfActiveBtn)\r\n    }\r\n  \r\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () =>\r\n    {\r\n      if (storedTheme !== 'light' || storedTheme !== 'dark') {\r\n        setTheme00(getPreferredTheme())\r\n      }\r\n    })\r\n  \r\n    window.addEventListener('DOMContentLoaded', () =>\r\n    {\r\n      showActiveTheme(getPreferredTheme())\r\n  \r\n      document.querySelectorAll('[data-bs-theme-value]')\r\n        .forEach(toggle => {\r\n          toggle.addEventListener('click', () =>\r\n          {\r\n            const theme = toggle.getAttribute('data-bs-theme-value')\r\n            localStorage.setItem('theme', theme)\r\n            setTheme00(theme)\r\n            showActiveTheme(theme)\r\n          })\r\n        })\r\n    })\r\n  })()"],"names":["theme","storedTheme","localStorage","getItem","getPreferredTheme","window","matchMedia","matches","setTheme00","a","document","documentElement","setAttribute","getElementById","src","console","log","showActiveTheme","activeThemeIcon","querySelector","btnToActive","svgOfActiveBtn","getAttribute","querySelectorAll","forEach","element","classList","remove","add","addEventListener","toggle","setItem"],"sourceRoot":""}