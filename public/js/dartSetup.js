/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/dart/game/classes/dartSetup.js":
/*!*****************************************************!*\
  !*** ./resources/js/dart/game/classes/dartSetup.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DartSetup)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\r\n * @author Maximilian Mewes\r\n *\r\n *\r\n */\n/**\r\n * Singleton Dart entry class\r\n *\r\n */\nvar DartSetup = /*#__PURE__*/function () {\n  function DartSetup() {\n    var _this = this;\n    _classCallCheck(this, DartSetup);\n    if (DartSetup.instance) return DartSetup.instance;\n    DartSetup.instance = this;\n    DartSetup.count = 1;\n    var form = document.getElementById('dartGameCreateForm');\n    form.addEventListener(\"submit\", function (e) {\n      // e.preventDefault();\n      var selectedUserList = Array.prototype.slice.call(document.getElementById('selectedUserList').children);\n      selectedUserList.forEach(function (el, i) {\n        var userId = el.querySelector('input[type=hidden]').getAttribute('value');\n        var index = i + 1;\n        form.appendChild(_this._createHiddenPositionInput(userId, index));\n      });\n    });\n    document.querySelector('.btn-remove-player').addEventListener('click', function (h) {\n      _this._animateCSS(h.target.closest('div.row'), 'fadeOut', .5);\n      DartSetup.count--;\n      window.scrollTo(0, document.documentElement.scrollTop - 20);\n    });\n    document.querySelector('.btn-down-player').addEventListener('click', function (h) {\n      _this._moveElementDown(h.target.closest('div.row'));\n    });\n  }\n  _createClass(DartSetup, [{\n    key: \"fetchUser\",\n    value: function () {\n      var _fetchUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/api/v1/user/search/' + name);\n            case 2:\n              result = _context.sent.data.data;\n              // console.log(result);\n\n              this.populateSelectionList(result.users);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function fetchUser(_x) {\n        return _fetchUser.apply(this, arguments);\n      }\n      return fetchUser;\n    }()\n  }, {\n    key: \"populateSelectionList\",\n    value: function populateSelectionList(users) {\n      var _this2 = this;\n      var totalHeight = 0;\n      var list = document.querySelector('#ListUser');\n      list.innerHTML = '';\n      var selectedUser = [];\n      var selectedUserList = Array.prototype.slice.call(document.getElementById('selectedUserList').children);\n      selectedUserList.forEach(function (el) {\n        var userId = el.querySelector('input[type=hidden]').getAttribute('value');\n        selectedUser.push(parseInt(userId));\n      });\n      users.forEach(function (user) {\n        // not the most efficient think to do but it works for now\n        if (!selectedUser.includes(user.id)) {\n          var row = _this2._createSelectionRow(user.id, user.img, user.name);\n          list.appendChild(row);\n          totalHeight += row.offsetHeight;\n        }\n      });\n      var currentY = document.documentElement.scrollTop;\n      window.scrollTo(0, totalHeight + currentY); // better UX for mobile screens\n    }\n  }, {\n    key: \"_createSelectionRow\",\n    value: function _createSelectionRow(userId, userImg, userName) {\n      var _this3 = this;\n      var row = document.createElement('li');\n      row.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');\n      row.setAttribute('data-user-id', userId);\n      var rowData = document.createElement('div');\n      rowData.classList.add('me-auto');\n      rowData.innerHTML = \"<img src=\\\"\".concat(userImg, \"\\\" width=\\\"32px\\\" style=\\\"border-radius:50%\\\"> \").concat(userName);\n      var addButton = document.createElement('button');\n      addButton.setAttribute('type', 'button');\n      addButton.classList.add('btn', 'btn-add-player');\n      addButton.addEventListener('click', function (h) {\n        if (DartSetup.count >= 4) {\n          // cheap solution must be changed later\n          alert('Maximum players reached!');\n          return;\n        }\n        _this3._createSelectedRow(h.target.closest('li'));\n        _this3._animateCSS(h.target.closest('li'), 'fadeOut', .5);\n      });\n      var plusIcon = document.createElement('i');\n      plusIcon.classList.add('fa-solid', 'fa-circle-plus', 'fa-xl');\n      addButton.appendChild(plusIcon);\n      row.appendChild(rowData);\n      row.appendChild(addButton);\n      return row;\n    }\n  }, {\n    key: \"_createSelectedRow\",\n    value: function _createSelectedRow(selectionRow) {\n      var list = document.querySelector('#selectedUserList');\n      var userId = selectionRow.getAttribute('data-user-id');\n      var userImg = selectionRow.firstChild.querySelector('img').getAttribute('src');\n      var userName = selectionRow.firstChild.textContent;\n\n      // Row\n      var row = document.createElement('div');\n      row.classList.add('row');\n      row.style.opacity = 0;\n      row.style.transition = \"opacity .5s ease\";\n      row.appendChild(this._createHiddenIDInput(userId));\n\n      // User image column\n      var colImg = document.createElement('div');\n      colImg.classList.add('col-auto', 'pe-1');\n      var userImage = document.createElement('img');\n      userImage.setAttribute('src', userImg);\n      userImage.setAttribute('width', '32px');\n      userImage.setAttribute('style', 'border-radius: 50%');\n      colImg.appendChild(userImage);\n      row.appendChild(colImg);\n\n      // Username column\n      var colName = document.createElement('div');\n      colName.classList.add('col', 'fs-5');\n      colName.innerHTML = userName;\n      row.appendChild(colName);\n\n      // Action column\n      var colActions = document.createElement('div');\n      colActions.classList.add('col-auto', 'actions');\n\n      // Action buttons\n      var removeButton = this._createRemoveButton(row.offsetHeight);\n      colActions.appendChild(removeButton);\n      var upButton = this._createUpButton();\n      colActions.appendChild(upButton);\n      if (!list.children[list.children.length - 1].querySelector('.btn-down-player')) {\n        var downButton = this._createDownButton();\n        var actions = list.children[list.children.length - 1].querySelector('.actions');\n        actions.insertBefore(downButton, actions.children[actions.children.length - 1]);\n      }\n      row.appendChild(colActions);\n      list.appendChild(row);\n      DartSetup.count++;\n      window.scrollTo(0, row.offsetHeight + document.documentElement.scrollTop);\n      setTimeout(function () {\n        row.style.opacity = 1;\n      }, 200);\n    }\n  }, {\n    key: \"_createHiddenIDInput\",\n    value: function _createHiddenIDInput(userId) {\n      var inputHidden = document.createElement('input');\n      inputHidden.setAttribute('type', 'hidden');\n      inputHidden.setAttribute('name', \"users[\".concat(userId, \"]\"));\n      inputHidden.setAttribute('value', userId);\n      return inputHidden;\n    }\n  }, {\n    key: \"_createHiddenPositionInput\",\n    value: function _createHiddenPositionInput(userId, position) {\n      var inputHidden = document.createElement('input');\n      inputHidden.setAttribute('type', 'hidden');\n      inputHidden.setAttribute('name', \"userPositions[\".concat(userId, \"]\"));\n      inputHidden.setAttribute('value', \"\".concat(position));\n      return inputHidden;\n    }\n  }, {\n    key: \"_createRemoveButton\",\n    value: function _createRemoveButton(rowHeight) {\n      var _this4 = this;\n      var btn = document.createElement('button');\n      btn.setAttribute('type', 'button');\n      btn.classList.add('btn', 'btn-remove-player');\n      btn.addEventListener('click', function (h) {\n        var list = document.getElementById('selectedUserList');\n        var row = h.target.closest('div.row');\n        var index = _this4._listIndexOf(list, row);\n        _this4._animateCSS(row, 'fadeOut', .5);\n        window.scrollTo(0, document.documentElement.scrollTop - rowHeight);\n        if (index >= list.children.length - 1) {\n          list.children[list.children.length - 2].querySelector('.btn-down-player').remove();\n        }\n        DartSetup.count--;\n      });\n      var icon = document.createElement('i');\n      icon.classList.add('fa-solid', 'fa-square-xmark', 'fa-xl');\n      btn.appendChild(icon);\n      btn.innerHTML = \"\\n\" + btn.innerHTML;\n      return btn;\n    }\n  }, {\n    key: \"_createUpButton\",\n    value: function _createUpButton() {\n      var _this5 = this;\n      var btn = document.createElement('button');\n      btn.setAttribute('type', 'button');\n      btn.classList.add('btn', 'btn-up-player');\n      btn.addEventListener('click', function (h) {\n        _this5._moveElementUp(h.target);\n      });\n      var icon = document.createElement('i');\n      icon.classList.add('fa-solid', 'fa-circle-up', 'fa-xl');\n      btn.appendChild(icon);\n      btn.innerHTML = \"\\n\" + btn.innerHTML;\n      return btn;\n    }\n  }, {\n    key: \"_createDownButton\",\n    value: function _createDownButton() {\n      var _this6 = this;\n      var btn = document.createElement('button');\n      btn.setAttribute('type', 'button');\n      btn.classList.add('btn', 'btn-down-player');\n      btn.addEventListener('click', function (h) {\n        _this6._moveElementDown(h.target);\n      });\n      var icon = document.createElement('i');\n      icon.classList.add('fa-solid', 'fa-circle-down', 'fa-xl');\n      btn.appendChild(icon);\n      btn.innerHTML = \"\\n\" + btn.innerHTML;\n      return btn;\n    }\n  }, {\n    key: \"_moveElementUp\",\n    value: function _moveElementUp(element) {\n      var row = element.closest('div.row');\n      var list = document.getElementById('selectedUserList');\n      var index = this._listIndexOf(list, row);\n      this._moveListElement(list, index, index - 1);\n      if (index - 1 <= 0) {\n        row.querySelector('.btn-up-player').remove();\n        var actions = list.children[1].querySelector('.actions');\n        actions.insertBefore(this._createUpButton(), actions.children[1]);\n      }\n      if (index <= list.children.length - 1 && !row.querySelector('.btn-down-player')) {\n        list.children[list.children.length - 1].querySelector('.btn-down-player').remove();\n        var _actions = row.querySelector('.actions');\n        _actions.insertBefore(this._createDownButton(), _actions.children[_actions.children.length - 1]);\n      }\n    }\n  }, {\n    key: \"_moveElementDown\",\n    value: function _moveElementDown(element) {\n      var row = element.closest('div.row');\n      var list = document.getElementById('selectedUserList');\n      var index = this._listIndexOf(list, row);\n      this._moveListElement(list, index, index + 2);\n      if (index + 2 >= list.children.length - 1 && list.children.length > 1) {\n        row.querySelector('.btn-down-player').remove();\n        var actions = list.children[list.children.length - 2].querySelector('.actions');\n        actions.insertBefore(this._createDownButton(), actions.children[actions.children.length - 1]);\n      }\n      if (index + 2 >= 0 && !row.querySelector('.btn-up-player')) {\n        list.children[0].querySelector('.btn-up-player').remove();\n        var _actions2 = row.querySelector('.actions');\n        _actions2.insertBefore(this._createUpButton(), _actions2.children[_actions2.children.length]);\n      }\n    }\n  }, {\n    key: \"_moveListElement\",\n    value: function _moveListElement(list, from) {\n      var to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var c = list.children;\n      var element = c[from];\n      if (to === null) {\n        list.appendChild(element);\n      } else {\n        list.insertBefore(element, c[to]);\n      }\n    }\n  }, {\n    key: \"_listIndexOf\",\n    value: function _listIndexOf(list, element) {\n      var nodes = Array.prototype.slice.call(list.children);\n      return nodes.indexOf(element);\n    }\n  }, {\n    key: \"_animateCSS\",\n    value: function _animateCSS(element, animation) {\n      var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var prefix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'animate__';\n      return new Promise(function (resolve, reject) {\n        var animationName = \"\".concat(prefix).concat(animation);\n        var node = element;\n        node.classList.add(\"\".concat(prefix, \"animated\"), animationName);\n        node.style.setProperty('--animate-duration', \"\".concat(duration, \"s\"));\n        function handleAnimationEnd(event) {\n          event.stopPropagation();\n          node.classList.remove(\"\".concat(prefix, \"animated\"), animationName);\n          node.remove();\n          resolve('Animation ended');\n        }\n        node.addEventListener('animationend', handleAnimationEnd, {\n          once: true\n        });\n      });\n    }\n  }]);\n  return DartSetup;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/dart/game/classes/dartSetup.js\n");

/***/ }),

/***/ "./resources/js/dart/game/dartSetup.js":
/*!*********************************************!*\
  !*** ./resources/js/dart/game/dartSetup.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _classes_dartSetup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/dartSetup.js */ \"./resources/js/dart/game/classes/dartSetup.js\");\n/**\r\n * @author Maximilian Mewes\r\n *\r\n *\r\n */\n\n\n$(function () {\n  var dartSetup = new _classes_dartSetup_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  var debounce = function debounce(fn) {\n    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n    var timerId = null;\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      clearTimeout(timerId);\n      timerId = setTimeout(function () {\n        return fn.apply(void 0, args);\n      }, delay);\n    };\n  };\n  $('#SearchUser').on('input', debounce(function (e) {\n    var input = $(e.target).val();\n    if (input) dartSetup.fetchUser($(e.target).val());\n  }, 400));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvZGFydC9nYW1lL2RhcnRTZXR1cC5qcyIsIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRStDO0FBRS9DQyxDQUFDLENBQUMsWUFDRjtFQUNJLElBQUlDLFNBQVMsR0FBRyxJQUFJRiw2REFBUyxDQUFDLENBQUM7RUFFL0IsSUFBTUcsUUFBUSxHQUFHLFNBQVhBLFFBQVFBLENBQUlDLEVBQUUsRUFBbUI7SUFBQSxJQUFqQkMsS0FBSyxHQUFBQyxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFBRyxJQUFJO0lBQzlCLElBQUlHLE9BQU8sR0FBRyxJQUFJO0lBQ2xCLE9BQU8sWUFBYTtNQUFBLFNBQUFDLElBQUEsR0FBQUosU0FBQSxDQUFBQyxNQUFBLEVBQVRJLElBQUksT0FBQUMsS0FBQSxDQUFBRixJQUFBLEdBQUFHLElBQUEsTUFBQUEsSUFBQSxHQUFBSCxJQUFBLEVBQUFHLElBQUE7UUFBSkYsSUFBSSxDQUFBRSxJQUFBLElBQUFQLFNBQUEsQ0FBQU8sSUFBQTtNQUFBO01BQ1hDLFlBQVksQ0FBQ0wsT0FBTyxDQUFDO01BQ3JCQSxPQUFPLEdBQUdNLFVBQVUsQ0FBQztRQUFBLE9BQU1YLEVBQUUsQ0FBQVksS0FBQSxTQUFJTCxJQUFJLENBQUM7TUFBQSxHQUFFTixLQUFLLENBQUM7SUFDbEQsQ0FBQztFQUNMLENBQUM7RUFFREosQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDZ0IsRUFBRSxDQUFDLE9BQU8sRUFBRWQsUUFBUSxDQUFDLFVBQVNlLENBQUMsRUFDaEQ7SUFDSSxJQUFJQyxLQUFLLEdBQUdsQixDQUFDLENBQUNpQixDQUFDLENBQUNFLE1BQU0sQ0FBQyxDQUFDQyxHQUFHLENBQUMsQ0FBQztJQUU3QixJQUFHRixLQUFLLEVBQ0pqQixTQUFTLENBQUNvQixTQUFTLENBQUNyQixDQUFDLENBQUNpQixDQUFDLENBQUNFLE1BQU0sQ0FBQyxDQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0VBRTlDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUNaLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9kYXJ0L2dhbWUvZGFydFNldHVwLmpzPzhhMDAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBhdXRob3IgTWF4aW1pbGlhbiBNZXdlc1xyXG4gKlxyXG4gKlxyXG4gKi9cclxuXHJcbmltcG9ydCBEYXJ0U2V0dXAgZnJvbSAnLi9jbGFzc2VzL2RhcnRTZXR1cC5qcyc7XHJcblxyXG4kKGZ1bmN0aW9uKClcclxue1xyXG4gICAgdmFyIGRhcnRTZXR1cCA9IG5ldyBEYXJ0U2V0dXAoKTtcclxuXHJcbiAgICBjb25zdCBkZWJvdW5jZSA9IChmbiwgZGVsYXkgPSAxMDAwKSA9PiB7XHJcbiAgICAgICAgbGV0IHRpbWVySWQgPSBudWxsO1xyXG4gICAgICAgIHJldHVybiAoLi4uYXJncykgPT4ge1xyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXJJZCk7XHJcbiAgICAgICAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KCgpID0+IGZuKC4uLmFyZ3MpLCBkZWxheSk7XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgJCgnI1NlYXJjaFVzZXInKS5vbignaW5wdXQnLCBkZWJvdW5jZShmdW5jdGlvbihlKVxyXG4gICAge1xyXG4gICAgICAgIGxldCBpbnB1dCA9ICQoZS50YXJnZXQpLnZhbCgpO1xyXG5cclxuICAgICAgICBpZihpbnB1dClcclxuICAgICAgICAgICAgZGFydFNldHVwLmZldGNoVXNlcigkKGUudGFyZ2V0KS52YWwoKSk7XHJcblxyXG4gICAgfSwgNDAwKSk7XHJcbn0pO1xyXG4iXSwibmFtZXMiOlsiRGFydFNldHVwIiwiJCIsImRhcnRTZXR1cCIsImRlYm91bmNlIiwiZm4iLCJkZWxheSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInRpbWVySWQiLCJfbGVuIiwiYXJncyIsIkFycmF5IiwiX2tleSIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJhcHBseSIsIm9uIiwiZSIsImlucHV0IiwidGFyZ2V0IiwidmFsIiwiZmV0Y2hVc2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/dart/game/dartSetup.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/dart/game/dartSetup.js");
/******/ 	
/******/ })()
;